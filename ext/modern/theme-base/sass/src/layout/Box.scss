/**
 * @class Ext.layout.Box
 */

.x-layout-box {
    @include st-box();

    &.x-horizontal {
        @include st-box-orient(horizontal, important);

        > .x-layout-box-item.x-flexed {
            min-width: 0;
        }
    }

    &.x-vertical {
        @include st-box-orient(vertical, important);

        > .x-layout-box-item.x-flexed {
            min-height: 0;
        }
    }

    &.x-align-start {
        @include st-box-align(start);
    }

    &.x-align-center {
        @include st-box-align(center);
    }

    &.x-align-end {
        @include st-box-align(end);
    }

    &.x-align-stretch {
        @include st-box-align(stretch);

        // Using a vbox as the base for this:
        // The following are required because the height is provided
        // by align stretch. As such, if you attempt to put a height: 100%
        // as a child of the first item, the height is not applied because
        // the parent element does not have an explicit height. While this technically
        // follows standards behaviour, it's difficult to work with. As of writing this
        // issue only appears to affect safari.
        & > .x-layout-hbox-item.x-stretched {
            height: 100%;
        }

        & > .x-layout-vbox-item.x-stretched {
            width: 100%;
        }
    }

    &.x-pack-start {
        @include st-box-pack(start);
    }

    &.x-pack-center {
        @include st-box-pack(center);
    }

    &.x-pack-end {
        @include st-box-pack(end);
    }

    &.x-pack-justify {
        @include st-box-pack(justify);
    }
}

.x-layout-box-item.x-sized {
    > .x-inner, > .x-body, > .x-dock-outer {
        @include absolute-fit();
    }
}

// Platform specific code

.x-webkit {
    .x-layout-box {
        &.x-horizontal > .x-layout-box-item.x-flexed {
            width: 0 !important;
        }

        &.x-vertical > .x-layout-box-item.x-flexed {
            height: 0 !important;
        }
    }
}

.x-firefox {
    .x-stretched {
        &.x-dock-horizontal {
            > .x-dock-body {
                width: 0;
            }
        }

        &.x-dock-vertical {
            > .x-dock-body {
                height: 0;
            }
        }
    }

    .x-container {
        .x-dock-horizontal.x-unsized {
            .x-dock-body {
                min-height: 0;
                min-width: 0;
            }
        }
    }

    .x-has-height > .x-dock.x-unsized.x-dock-vertical {
        > .x-dock-body {
            height: 0;
        }
    }
}
